
@using POR.Models
@model IEnumerable<POR.Models.PersonalContact._PsnContactHeader>
<link href="~/Content/CustomeStyle.css" rel="stylesheet" />
@{
    ViewBag.Title = "Details";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    //LivingInOutDetai
    <div class="content-wrapper" style="height:900px !important;">
        <section class="content-header">

            <h1>
                Child Details
                <small>View Added Details</small>
            </h1>

            <ol class="breadcrumb">
                <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
                <li class="active">Personal Child Details</li>
            </ol>

            <div id="ErrorMessage">
                @if (TempData["ScfMsg"] != null)
                {
                    <div id="Msg" class="col-lg-12  alert alert-success">
                        <button type="button" class="close" data-dismiss="alert">×</button>
                        <strong>Alert! </strong> @TempData["ScfMsg"]
                    </div>
                }
                else if (TempData["ErrMsg"] != null)
                {
                    <div id="Msg" class="col-lg-12 alert alert-danger">
                        <button type="button" class="close" data-dismiss="alert">×</button>
                        <strong>Alert! </strong>@TempData["ErrMsg"]
                    </div>

                }

            </div>

        </section>

        <br />
        @foreach (var item in Model)
        {
            int RejectStatus = Convert.ToInt32(TempData["Rejectstatus"]);
            int childLiveStatus = Convert.ToInt32(TempData["childLiveStatus"]);
            
            switch (RejectStatus)
            {
                /// If Reject status is 2 show the reject reson and reject person Name
                case 2:
                <section class="col-lg-12 nav-tabs-custom connectedSortable">
                    <div class="col-lg-6">
                        <br />
                        <dl class="dl-horizontal">
                            @*Service No*@
                            <dt class="form-group">
                                @Html.Label("Service No :", new { @class = "control-label" })
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => item.ServiceNo)

                            </dd>

                            @*Rank*@
                            <dt class="form-group">
                                @Html.Label("Rank :", new { @class = "control-label" })
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => item.Rank)
                            </dd>

                            @*Full Name*@
                            <dt class="form-group">
                                @Html.Label("Full Name :", new { @class = "control-label" })
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => item.FullName)
                            </dd>

                            @*Location*@
                            <dt class="form-group">
                                @Html.Label("Location:", new { @class = "control-label" })

                            </dt>

                            <dd>
                                @Html.DisplayFor(model => item.Location)
                            </dd>

                            @*Authority*@
                            <dt class="form-group">
                                @Html.Label("Authority :", new { @class = "control-label" })

                            </dt>

                            <dd>
                                @Html.DisplayFor(model => item.Authority)
                            </dd>

                            @*Refference No*@
                            <dt class="form-group">
                                @Html.Label("Refference No :", new { @class = "control-label" })
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => item.RefNo)
                            </dd>

                            @{
                                switch (childLiveStatus)
                                {
                                    case (int)POR.Enum.PorSubCategory.Live:
                                        @* ChildFullName :*@
                                        <dt class="form-group alert-danger">
                                            Child Full Name :
                                        </dt>

                                        <dd class="alert-danger">
                                            @Html.DisplayFor(model => item.ChildFullName)
                                        </dd>

                                        @* Child FullName With Initial :*@
                                        <dt class="form-group alert-danger">
                                            Child Name with Initial :
                                        </dt>

                                        <dd class="alert-danger">
                                            @Html.DisplayFor(model => item.ChildFullNameWithInitial)
                                        </dd>

                                        @* Disrict :*@
                                        <dt class="form-group alert-danger">
                                            District :
                                        </dt>

                                        <dd class="alert-danger">
                                            @Html.DisplayFor(model => item.Disrict2)
                                        </dd>

                                        @* BirthCertificateNo :*@
                                        <dt class="form-group alert-danger">
                                            Birth Certificate No:
                                        </dt>

                                        <dd class="alert-danger">
                                            @Html.DisplayFor(model => item.BirthCertificateNo)
                                        </dd>

                                        @* BirthPlace :*@
                                        <dt class="form-group alert-danger">
                                            Birth Place:
                                        </dt>

                                        <dd class="alert-danger">
                                            @Html.DisplayFor(model => item.BirthPlace)
                                        </dd>

                                        @* DateOfBirth :*@
                                        <dt class="form-group alert-danger">
                                            Date Of Birth:
                                        </dt>

                                        <dd class="alert-danger">
                                            @Html.DisplayFor(model => item.DateOfBirth)
                                        </dd>

                                        @* GenderType :*@
                                        <dt class="form-group alert-danger">
                                            GenderType:
                                        </dt>

                                        <dd class="alert-danger">
                                            @Html.DisplayFor(model => item.GenderType)
                                        </dd>

                                        break;
                                    case (int)POR.Enum.PorSubCategory.Death:
                                        @* ChildFullName :*@
                                        <dt class="form-group">
                                            Child Full Name :
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => item.ChildFullName)
                                        </dd>

                                        @* Child FullName With Initial :*@
                                        <dt class="form-group>
                                            Child Name with Initial :
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => item.ChildFullNameWithInitial)
                                        </dd>

                                        @* DeathCertificateNo :*@
                                        <dt class="form-group>
                                            Death Certificate No:
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => item.DeathCertificateNo)
                                        </dd>

                                        @* DateOfDeath :*@
                                        <dt class="form-group">
                                            Date Of Death:
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => item.DateOfDeath)
                                        </dd>

                                        @* GenderType :*@
                                        <dt class="form-group">
                                            GenderType:
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => item.GenderType)
                                        </dd>

                                        break;


                                }
                            }

                            @* Reject Reason Comment :*@
                            <dt class="form-group alert-danger">
                                Reject Reason:
                            </dt>

                            <dd class="alert-danger">
                                @Html.DisplayFor(model => item.Comment)
                            </dd>

                            @* Reject Reason Person :*@
                            <dt class="form-group alert-warning">
                                Reject Person:
                            </dt>

                            <dd class="alert-warning">
                                @Html.DisplayFor(model => item.RejectRoleName)
                            </dd>

                        </dl>
                    </div>
                </section>

            break;

        default:

            <section class="col-lg-12 nav-tabs-custom connectedSortable">
                <div class="col-lg-6">
                    <br />
                    <dl class="dl-horizontal">
                        @*Service No*@
                        <dt class="form-group">
                            @Html.Label("Service No :", new { @class = "control-label" })
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => item.ServiceNo)

                        </dd>

                        @*Rank*@
                        <dt class="form-group">
                            @Html.Label("Rank :", new { @class = "control-label" })
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => item.Rank)
                        </dd>

                        @*Full Name*@
                        <dt class="form-group">
                            @Html.Label("Full Name :", new { @class = "control-label" })
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => item.FullName)
                        </dd>

                        @*Location*@
                        <dt class="form-group">
                            @Html.Label("Location:", new { @class = "control-label" })

                        </dt>

                        <dd>
                            @Html.DisplayFor(model => item.Location)
                        </dd>

                        @*Authority*@
                        <dt class="form-group">
                            @Html.Label("Authority :", new { @class = "control-label" })

                        </dt>

                        <dd>
                            @Html.DisplayFor(model => item.Authority)
                        </dd>

                         @if (item.PreviousReject == 1)
                         {
                            @* Reject Ref :*@
                            <dt class="alert alert-danger">
                                Reject Ref No :
                            </dt>

                            <dd class="alert alert-danger">
                                @Html.DisplayFor(model => item.RejectAuth)

                            </dd>
                        }

                        @*Refference No*@
                        <dt class="form-group">
                            @Html.Label("Refference No :", new { @class = "control-label" })
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => item.RefNo)
                        </dd>

                        @{
                            switch (childLiveStatus)
                            {
                                case (int)POR.Enum.PorSubCategory.Live:
                                        @* ChildFullName :*@
                                        <dt class="form-group">
                                            Child Full Name :
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => item.ChildFullName)
                                        </dd>

                                        @* Child FullName With Initial :*@
                                        <dt class="form-group">
                                            Child Name with Initial :
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => item.ChildFullNameWithInitial)
                                        </dd>

                                        @* Child Live Status :*@
                                        <dt class="form-group">
                                            Child Live Status :
                                        </dt>

                                        <dd>
                                            Live
                                        </dd>

                                        @* Disrict :*@
                                        <dt class="form-group">
                                            District :
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => item.Disrict2)
                                        </dd>

                                        @* BirthCertificateNo :*@
                                        <dt class="form-group">
                                            Birth Certificate No:
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => item.BirthCertificateNo)
                                        </dd>

                                        @* BirthPlace :*@
                                        <dt class="form-group">
                                            Birth Place:
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => item.BirthPlace)
                                        </dd>

                                        @* DateOfBirth :*@
                                        <dt class="form-group">
                                            Date Of Birth:
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => item.DateOfBirth)
                                        </dd>

                                        @* GenderType :*@
                                        <dt class="form-group">
                                            GenderType:
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => item.GenderType)
                                        </dd>

                                    break;
                                case (int)POR.Enum.PorSubCategory.Death:
                                         @* ChildFullName :*@
                                        <dt class="form-group">
                                           Child Full Name :
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => item.ChildFullName)
                                        </dd>

                                        @* Child FullName With Initial :*@
                                        <dt class="form-group">
                                            Child Name with Initial :
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => item.ChildFullNameWithInitial)
                                        </dd>

                                        @* Child Live Status :*@
                                        <dt class="form-group">
                                            Child Live Status :
                                        </dt>

                                        <dd>
                                            Death
                                        </dd>

                                        @* DeathCertificateNo :*@
                                        <dt class="form-group">
                                            Death Certificate No:
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => item.DeathCertificateNo)
                                        </dd>

                                        @* DateOfDeath :*@
                                        <dt class="form-group">
                                            Date Of Death:
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => item.DateOfDeath)
                                        </dd>

                                        @* GenderType :*@
                                        <dt class="form-group">
                                            GenderType:
                                        </dt>

                                        <dd>
                                            @Html.DisplayFor(model => item.GenderType)
                                        </dd>

                                    break;
                            }
                        }
                    </dl>
                </div>
            </section>
        break;
    }

    <section>

        @{
            int? URID = Convert.ToInt32(TempData["UserRoleId"]);
            int? CurrentStatus = Convert.ToInt32(TempData["CurrentStatus"]);
            int? SubmitStatus = Convert.ToInt32(TempData["SubmitStatus"]);
            int Reject = Convert.ToInt32(TempData["Rejectstatus"]);

            if (item.RSID == (int)POR.Enum.RecordStatus.Insert)
            {
                <div class="col-lg-12">

                    @Html.ActionLink("Forward", "Forward", "PersonalContact", new { id = item.PCHID }, new { @class = "btn btn-primary", id = "btnCertify" })
                    @if (Reject == 2)
                    {
                        @Html.ActionLink("Edit", "ChildEdit", "PersonalContact", new { id = item.PCHID, rejectStatus = 2 }, new { @class = "btn btn-warning" })
                    }
                    else
                    {
                        @Html.ActionLink("Edit", "ChildEdit", "PersonalContact", new { id = item.PCHID, rejectStatus = 1 }, new { @class = "btn btn-warning" })
                    }

                    @Html.ActionLink("Delete", "Delete", "PersonalContact", new { id = item.PCHID }, new { @class = "btn btn-danger" })
                    @Html.ActionLink("Back to List", "IndexChildInfo", "PersonalContact", new { id = item.PCHID }, new { @class = "btn btn-info" })
                </div>
            }
            else if (item.RSID == (int)POR.Enum.RecordStatus.Forward && (URID == CurrentStatus || CurrentStatus == 0))
            {
                if (CurrentStatus == (int)POR.Enum.UserRole.ASORSOVRP3VOL || CurrentStatus == (int)POR.Enum.UserRole.ASORSOVRP2VOL)
                {
                    <div class="col-lg-12">
                        @Html.ActionLink("Certify to ED", "Forward", "PersonalContact", new { id = item.PCHID, Sno = item.ServiceNo }, new { @class = "btn btn-success", id = "btnCertify" })
                        <input id="btnReject" type="button" value="Reject" data-assigned-id="1000" data-toggle="modal" data-target="#exampleModalLong" class="btn btn-danger" />
                        @Html.ActionLink("Back to List", "IndexChildInfo", "PersonalContact", new { id = item.PCHID }, new { @class = "btn btn-info" })

                    </div>
                }
                else
                {
                    <div class="col-lg-12">
                        @Html.ActionLink("Forward", "Forward", "PersonalContact", new { id = item.PCHID }, new { @class = "btn btn-primary", id = "btnCertify" })
                        <input id="btnReject" type="button" value="Reject" data-assigned-id="1000" data-toggle="modal" data-target="#exampleModalLong" class="btn btn-danger" />
                        @Html.ActionLink("Back to List", "IndexChildInfo", "PersonalContact", new { id = item.PCHID }, new { @class = "btn btn-info" })

                    </div>
                }
            }           

            else if (item.RSID == (int)POR.Enum.RecordStatus.Reject && URID == CurrentStatus && CurrentStatus == (int)POR.Enum.UserRole.P2CLERK || CurrentStatus == (int)POR.Enum.UserRole.P3CLERK)
            {
                <div class="col-lg-12">
                    @Html.ActionLink("Reject Confirm", "RejectConfirm", "PersonalContact", new { id = item.PCHID, rejectStatus = 2 }, new { @class = "btn btn-danger" })
                    @Html.ActionLink("Edit", "ChildEdit", "PersonalContact", new { id = item.PCHID, rejectStatus = 2 }, new { @class = "btn btn-warning" })
                    @Html.ActionLink("Back to List", "IndexRejectPsnChild", "PersonalContact", new { id = item.PCHID }, new { @class = "btn btn-info" })
                </div>
            }
            @*else if (item.RSID == (int)POR.Enum.RecordStatus.Reject && URID == CurrentStatus && CurrentStatus != 1)
            {
                <div class="col-lg-12">
                    @Html.ActionLink("Forward", "Forward", "Married", new { id = item.LIOHID }, new { @class = "btn btn-primary" })
                    <input id="btnReject" type="button" value="Reject" data-assigned-id="1000" data-toggle="modal" data-target="#exampleModalLong" class="btn btn-danger" />
                    @Html.ActionLink("Back to List", "RejectIndex", "PersonalContact", new { @class = "btn btn-info" })
                </div>
            }
            else if (item.RSID == (int)POR.Enum.RecordStatus.Reject && URID == 12 && CurrentStatus != 1)
            {
                <div class="col-lg-12">
                    @Html.ActionLink("Forward", "Forward", "Married", new { id = item.PCHID }, new { @class = "btn btn-primary", id = "btnCertify" })
                    <input id="btnReject" type="button" value="Reject" data-assigned-id="1000" data-toggle="modal" data-target="#exampleModalLong" class="btn btn-danger" />
                    @Html.ActionLink("Back to List", "RejectIndex", "PersonalContact", new { @class = "btn btn-info" })
                </div>
            }*@

            else
            {
                <div class="col-lg-12">
                    @Html.ActionLink("Back to List", "IndexChildInfo", "PersonalContact", new { id = item.PCHID }, new { @class = "btn btn-info" })
                </div>
            }
        }
        @*Fixed Details Id popup Box value*@
        <input type="hidden" id="hndFADID" value="@Html.DisplayFor(model => item.PCHID)" />
        <input type="hidden" id="hndFMSID" value="@Html.DisplayFor(model => item.FMSID)" />

    </section>

    <div class="loading" id="dvloader">
        <img class="loading-image" src="~/Content/img/Spinner-3.gif" alt="Loading..." />
    </div>
            }

    </div>
}
<script src="~/Scripts/Jq.js"></script>
<script src="~/Scripts/PsnContact.js"></script>
<link href="~/Content/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.js"></script>

<div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="border-bottom:none !important;">
                Reject Comments
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <hr style="margin-top: 0px !important; margin-bottom: 0px !important; padding-bottom: 0px !important; padding-top: 0px !important;" />
            </div>
            <div class="modal-body" id="partial2">
                @{
                    <div>
                        @Html.Partial("_RejectCommentPsnContact")
                    </div>
                }
            </div>
        </div>
    </div>
</div>
