@using POR.Models
@model IEnumerable<POR.Models.Nok._NOKChangeHeader>
<link href="~/Content/CustomeStyle.css" rel="stylesheet" />
@{
    ViewBag.Title = "Details";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    //LivingInOutDetai
    <div class="content-wrapper" style="height:900px !important;">
        <section class="content-header">
            <h1>
                NOK Change Details
                <small>View Added Details</small>
            </h1>
            <ol class="breadcrumb">
                <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
                <li class="active">Dashboard</li>
            </ol>
            <div id="ErrorMessage">
                @if (TempData["ScfMsg"] != null)
                {
                    <div id="Msg" class="col-lg-12  alert alert-success">
                        <button type="button" class="close" data-dismiss="alert">×</button>
                        <strong>Alert! </strong> @TempData["ScfMsg"]
                    </div>
                }
                else if (TempData["ErrMsg"] != null)
                {
                    <div id="Msg" class="col-lg-12 alert alert-danger">
                        <button type="button" class="close" data-dismiss="alert">×</button>
                        <strong>Alert! </strong>@TempData["ErrMsg"]
                    </div>

                }

            </div>
        </section>

        <br />

        @foreach (var item in Model)
        {
            int? NOKchangeStatus = Convert.ToInt32(TempData["NOKchangeStatus"]);
            int RejectStatus = Convert.ToInt32(TempData["Rejectstatus"]);
           
            switch (RejectStatus)
            {
                /// If Reject status is 2 show the reject reson and reject person Name
                case 2:
                    <section class="col-lg-12 nav-tabs-custom connectedSortable">
                        <div class="col-lg-6">
                            <br />
                            <dl class="dl-horizontal">
                                @*Service No*@
                                <dt class="form-group">
                                    @Html.Label("Service No :", new { @class = "control-label" })
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.ServiceNo)

                                </dd>

                                @*Rank*@
                                <dt class="form-group">
                                    @Html.Label("Rank :", new { @class = "control-label" })
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.Rank)
                                </dd>

                                @*Full Name*@
                                <dt class="form-group">
                                    @Html.Label("Full Name :", new { @class = "control-label" })
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.FullName)
                                </dd>

                                @*Location*@
                                <dt class="form-group">
                                    @Html.Label("Location:", new { @class = "control-label" })

                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.Location)
                                </dd>

                                @*Authority*@
                                <dt class="form-group">
                                    @Html.Label("Authority :", new { @class = "control-label" })

                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.Authority)
                                </dd>

                                @*Refference No*@
                                <dt class="form-group">
                                    @Html.Label("Refference No :", new { @class = "control-label" })
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.RefNo)
                                </dd>

                                @* Reject Reason Comment :*@
                                <dt class="form-group alert-danger">
                                    Reject Reason:
                                </dt>

                                <dd class="alert-danger">
                                    @Html.DisplayFor(model => item.Comment)
                                </dd>

                                @* Reject Reason Person :*@
                                <dt class="form-group alert-warning">
                                    Reject Person:
                                </dt>

                                <dd class="alert-warning">
                                    @Html.DisplayFor(model => item.RejectRoleName)
                                </dd>
                            </dl>
                        </div>

                        @if (item.NOKName != "")
                        {
                            <div class="col-lg-6">
                                <br />
                                <dl class="dl-horizontal">
                                    @*NOKName*@
                                    <dt class="form-group">
                                        @Html.Label("NOK Name :", new { @class = "control-label" })

                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.NOKName)

                                    </dd>

                                    @*NOK Change to*@
                                    <dt class="form-group">
                                        @Html.Label(" NOK Change To :", new { @class = "control-label" })

                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.NOKChangeTo)

                                    </dd>

                                    @*NOKaddress*@
                                    <dt class="form-group">
                                        @Html.Label(" NOK Address :", new { @class = "control-label" })
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.NOKAddress)
                                    </dd>

                                    @*With Effice Date*@
                                    <dt class="form-group">
                                        @Html.Label("With Effect Date :", new { @class = "control-label" })
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.WFDate)
                                    </dd>

                                    @*District*@
                                    <dt class="form-group">
                                        @Html.Label("District :", new { @class = "control-label" })

                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.District)
                                    </dd>

                                    @*GS Division*@
                                    <dt class="form-group">
                                        @Html.Label("GS Division :", new { @class = "control-label" })

                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.GSName)
                                    </dd>

                                    @*Nearest Town*@
                                    <dt class="form-group">
                                        @Html.Label("Nearest Town :", new { @class = "control-label" })

                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.NearestTown)
                                    </dd>

                                    @*Police Station*@
                                    <dt class="form-group">
                                        @Html.Label("Police Station :", new { @class = "control-label" })

                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.PoliceStation1)
                                    </dd>

                                    @*Post Office*@
                                    <dt class="form-group">
                                        Post Office :
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.PostOfficeName)

                                    </dd>

                                    @*Remarks*@
                                    <dt class="form-group">
                                        @Html.Label("Remarks :", new { @class = "control-label" })
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.Remarks)
                                    </dd>
                                </dl>
                            </div>
                        }
                    </section>

                    break;

                default:

                    <section class="col-lg-12 nav-tabs-custom connectedSortable">
                        <div class="col-lg-6">
                            <br />
                            <dl class="dl-horizontal">
                                @*Service No*@
                                <dt class="form-group">
                                    @Html.Label("Service No :", new { @class = "control-label" })
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.ServiceNo)

                                </dd>

                                @*Rank*@
                                <dt class="form-group">
                                    @Html.Label("Rank :", new { @class = "control-label" })
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.Rank)
                                </dd>

                                @*Full Name*@
                                <dt class="form-group">
                                    @Html.Label("Full Name :", new { @class = "control-label" })
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.FullName)
                                </dd>

                                @*Location*@
                                <dt class="form-group">
                                    @Html.Label("Location:", new { @class = "control-label" })

                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.Location)
                                </dd>

                                @*Authority*@
                                <dt class="form-group">
                                    @Html.Label("Authority :", new { @class = "control-label" })

                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.Authority)
                                </dd>

                                @*Refference No*@
                                <dt class="form-group">
                                    @Html.Label("Refference No :", new { @class = "control-label" })
                                </dt>

                                <dd>
                                    @Html.DisplayFor(model => item.RefNo)
                                </dd>

                            </dl>
                        </div>

                        @if (item.NOKName != "")
                        {
                            <div class="col-lg-6">
                                <br />
                                <dl class="dl-horizontal">
                                    @*NOKName*@
                                    <dt class="form-group">
                                        @Html.Label("NOK Name :", new { @class = "control-label" })

                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.NOKName)

                                    </dd>

                                    @*NOK Change to*@
                                    <dt class="form-group">
                                        @Html.Label(" NOK Change To :", new { @class = "control-label" })

                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.NOKChangeTo)

                                    </dd>

                                    @*NOKaddress*@
                                    <dt class="form-group">
                                        @Html.Label(" NOK Address :", new { @class = "control-label" })
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.NOKAddress)
                                    </dd>

                                    @*With Effice Date*@
                                    <dt class="form-group">
                                        @Html.Label("With Effect Date :", new { @class = "control-label" })
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.WFDate)
                                    </dd>

                                    @*District*@
                                    <dt class="form-group">
                                        @Html.Label("District :", new { @class = "control-label" })

                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.District)
                                    </dd>

                                    @*GS Division*@
                                    <dt class="form-group">
                                        @Html.Label("GS Division :", new { @class = "control-label" })

                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.GSName)
                                    </dd>

                                    @*Nearest Town*@
                                    <dt class="form-group">
                                        @Html.Label("Nearest Town :", new { @class = "control-label" })

                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.NearestTown)
                                    </dd>

                                    @*Police Station*@
                                    <dt class="form-group">
                                        @Html.Label("Police Station :", new { @class = "control-label" })

                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.PoliceStation1)
                                    </dd>

                                    @*Post Office*@
                                    <dt class="form-group">
                                        Post Office :
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.PostOfficeName)

                                    </dd>

                                    @*Remarks*@
                                    <dt class="form-group">
                                        @Html.Label("Remarks :", new { @class = "control-label" })
                                    </dt>

                                    <dd>
                                        @Html.DisplayFor(model => item.Remarks)
                                    </dd>

                                </dl>
                            </div>
                        }

                    </section>
                    break;
              }
            <section>

                @{
                    int? URID = Convert.ToInt32(TempData["UserRoleId"]);
                    int? CurrentStatus = Convert.ToInt32(TempData["CurrentStatus"]);
                    int? SubmitStatus = Convert.ToInt32(TempData["SubmitStatus"]);
                    int Reject = Convert.ToInt32(TempData["Rejectstatus"]);

                    if (item.RSID == (int)POR.Enum.RecordStatus.Insert)
                    {
                        <div class="col-lg-12">
                            @Html.ActionLink("Forward", "Forward", "NOKChange", new { id = item.NOKCHID }, new { @class = "btn btn-primary", id = "btnCertify" })
                            @if (Reject == 2)
                            {
                                @Html.ActionLink("Edit", "Edit", "NOKChange", new { id = item.NOKCHID, rejectStatus = 2 }, new { @class = "btn btn-warning" })
                            }
                            else
                            {
                                @Html.ActionLink("Edit", "Edit", "NOKChange", new { id = item.NOKCHID, rejectStatus = 1 }, new { @class = "btn btn-warning" })
                            }

                            @Html.ActionLink("Delete", "Delete", "NOKChange", new { id = item.NOKCHID }, new { @class = "btn btn-danger" })
                            @*<input id="btnReject" type="button" value="" data-assigned-id="1000" data-toggle="modal" data-target="#exampleModalLong" class="btn btn-danger" />*@
                            @Html.ActionLink("Back to List", "Index", "NOKChange", new { id = item.NOKCHID }, new { @class = "btn btn-info" })
                        </div>
                    }
                    else if (item.RSID == (int)POR.Enum.RecordStatus.Forward && (URID == CurrentStatus || CurrentStatus == 0))
                    {
                        if (CurrentStatus == (int)POR.Enum.UserRole.ACCOUNTS01)
                        {
                            <div class="col-lg-12">
                                @Html.ActionLink("Certify to ED", "Forward", "NOKChange", new { id = item.NOKCHID, Sno = item.ServiceNo }, new { @class = "btn btn-success", id = "btnCertify" })
                                <input id="btnReject" type="button" value="Reject" data-assigned-id="1000" data-toggle="modal" data-target="#exampleModalLong" class="btn btn-danger" />
                                @Html.ActionLink("Back to List", "Index", "NOKChange", new { id = item.NOKCHID }, new { @class = "btn btn-info" })

                            </div>
                        }
                        else
                        {
                            <div class="col-lg-12">
                                @Html.ActionLink("Forward", "Forward", "NOKChange", new { id = item.NOKCHID }, new { @class = "btn btn-primary", id = "btnCertify" })
                                <input id="btnReject" type="button" value="Reject" data-assigned-id="1000" data-toggle="modal" data-target="#exampleModalLong" class="btn btn-danger" />
                                @Html.ActionLink("Back to List", "Index", "NOKChange", new { id = item.NOKCHID }, new { @class = "btn btn-info" })

                            </div>
                        }
                    }
                    else if (item.RSID == (int)POR.Enum.RecordStatus.Forward && (URID == CurrentStatus && CurrentStatus != 1))
                    {
                        <div class="col-lg-12">
                            @Html.ActionLink("Forward", "Forward", "NOKChange", new { id = item.NOKCHID }, new { @class = "btn btn-primary", id = "btnCertify" })
                            <input id="btnReject" type="button" value="Reject" data-assigned-id="1000" data-toggle="modal" data-target="#exampleModalLong" class="btn btn-danger" />
                            @Html.ActionLink("Back to List", "Index", "NOKChange", new { id = item.NOKCHID }, new { @class = "btn btn-info" })
                        </div>

                    }

                    else if (item.RSID == (int)POR.Enum.RecordStatus.Reject && URID == CurrentStatus && CurrentStatus == (int)POR.Enum.UserRole.P2CLERK || CurrentStatus == (int)POR.Enum.UserRole.P3CLERK)
                    {
                        <div class="col-lg-12">
                            @Html.ActionLink("Reject Confirm", "RejectConfirm", "NOKChange", new { id = item.NOKCHID, rejectStatus = 2 }, new { @class = "btn btn-danger" })
                            @Html.ActionLink("Edit", "Edit", "NOKChange", new { id = item.NOKCHID, rejectStatus = 2 }, new { @class = "btn btn-warning" })
                            @Html.ActionLink("Back to List", "RejectList", "NOKChange", new { id = item.NOKCHID }, new { @class = "btn btn-info" })
                        </div>
                    }
                    else if (item.RSID == (int)POR.Enum.RecordStatus.Reject && URID == CurrentStatus && CurrentStatus != 1)
                    {
                        <div class="col-lg-12">
                            @*@Html.ActionLink("Forward", "Forward", "Married", new { id = item.LIOHID }, new { @class = "btn btn-primary" })*@
                            <input id="btnReject" type="button" value="Reject" data-assigned-id="1000" data-toggle="modal" data-target="#exampleModalLong" class="btn btn-danger" />
                            @Html.ActionLink("Back to List", "RejectIndex", "NOKChange", new { @class = "btn btn-info" })
                        </div>
                    }
                    else if (item.RSID == (int)POR.Enum.RecordStatus.Reject && URID == 12 && CurrentStatus != 1)
                    {
                        <div class="col-lg-12">
                            @Html.ActionLink("Forward", "Forward", "Married", new { id = item.NOKCHID }, new { @class = "btn btn-primary", id = "btnCertify" })
                            <input id="btnReject" type="button" value="Reject" data-assigned-id="1000" data-toggle="modal" data-target="#exampleModalLong" class="btn btn-danger" />
                            @Html.ActionLink("Back to List", "RejectIndex", "NOKChange", new { @class = "btn btn-info" })
                        </div>
                    }
                    else
                    {
                        <div class="col-lg-12">
                            @Html.ActionLink("Back to List", "Index", "NOKChange", new { id = item.NOKCHID }, new { @class = "btn btn-info" })
                        </div>
                    }
                }
                @*Fixed Details Id popup Box value*@
                <input type="hidden" id="hndFADID" value="@Html.DisplayFor(model => item.NOKCHID)" />
                <input type="hidden" id="hndFMSID" value="@Html.DisplayFor(model => item.FMSID)" />

    </section>

        <div class="loading" id="dvloader">
            <img class="loading-image" src="~/Content/img/Spinner-3.gif" alt="Loading..." />
        </div>
    }

    </div>
}
<script src="~/Scripts/Jq.js"></script>
<script src="~/Scripts/LivingInOut.js"></script>
<link href="~/Content/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.js"></script>

<div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="border-bottom:none !important;">
                Reject Comments
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <hr style="margin-top: 0px !important; margin-bottom: 0px !important; padding-bottom: 0px !important; padding-top: 0px !important;" />
            </div>
            <div class="modal-body" id="partial2">
                @{
                    <div>
                        @Html.Partial("_RejectCommentNOKChange")
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@*<script type="text/javascript">
    $(function () {
        $('#btnReject').click(function () {
            var CSHID = $("#hndCSHID").val();
            var FMSID = $("#hndFMSID").val();

            var route = '@Url.Action("Reject", "Married")?CSHID=' + CSHID + '&FMSID=' + FMSID;
            $('#partial2').load(route);
        });
    });
</script>*@