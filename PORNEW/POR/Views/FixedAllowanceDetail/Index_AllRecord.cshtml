@model PagedList.IPagedList<POR.Models.Vw_FixedAllowance_FLowStatus>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}

<div class="content-wrapper" style="height:900px !important;">

    <section class="content-header">
        <h1>
            @{
                int? RecordStatusId = null;
                string RecordStatus = null;
                if (Request.QueryString["RSID"] != null)
                {
                    RecordStatusId = Convert.ToInt32(Request.QueryString["RSID"]);
                    if (RecordStatusId == 1000)
                    {
                        RecordStatus = "Fixed Allowance Details";
                    }
                    else if (RecordStatusId == 2000)
                    {
                        RecordStatus = "Forwarded Fixed Allowance";
                    }
                    else if (RecordStatusId == 3000)
                    {
                        RecordStatus = "Rejected Fixed Allowance";
                    }
                    //else if (RecordStatusId == 6000)
                    //{
                    //    RecordStatus = "Ceased Allowance";
                    //}

                }

            }
            @RecordStatus
            <small>View Details</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li class="active">Dashboard</li>
        </ol>
        <div id="ErrorMessage">
            @if (TempData["ScfMsg"] != null)
            {
            <div id="Msg" class="col-lg-12  alert alert-success">
                <button type="button" class="close" data-dismiss="alert">×</button>
                <strong>Alert!</strong> @TempData["ScfMsg"]
            </div>
            }
            else if (TempData["ErrMsg"] != null)
            {
            <div id="Msg" class="col-lg-12 alert alert-danger">
                <button type="button" class="close" data-dismiss="alert">×</button>
                <strong>Alert!</strong>@TempData["ErrMsg"]
            </div>

            }
        </div>
    </section>

    <section class="col-lg-12 connectedSortable">
        <div class="nav-tabs-custom">
            @Html.ValidationSummary(true)

            <div class="box-body">
                @using (Html.BeginForm("Index_AllRecord", "FixedAllowanceDetail", FormMethod.Get))
                   {
                   <div class="input-group">
                        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
                        <div class="input-group-btn">
                            <button type="submit" class="btn btn-success"><i class="fa fa-search"></i></button>
                        </div>
                    </div>
                   }

                @using (Html.BeginForm())
                { @Html.AntiForgeryToken()
                    <table id="example" class="table table-responsive table-striped table-hover">
                        <tr>
                            <th>
                                <input type="checkbox" id="checkAll" />                                
                            </th>
                            <th>
                                @Html.ActionLink("Service Type", "Index_AllRecord", "FixedAllowanceDetail", new { sortOrder = "ServiceType" }, null)
                            </th>
                            <th>
                                @Html.ActionLink("Service No", "Index_AllRecord", "FixedAllowanceDetail", new { sortOrder = "ServiceNo" }, null)
                            </th>
                            <th>
                                @Html.ActionLink("Rank", "Index_AllRecord", "FixedAllowanceDetail", new { sortOrder = "Rank" }, null)
                            </th>
                            <th>
                                @Html.ActionLink("Name With Initials", "Index_AllRecord", "FixedAllowanceDetail", new { sortOrder = "Name" }, null)
                            </th>
                            <th>
                                @Html.ActionLink("Allowance Name", "Index_AllRecord", "FixedAllowanceDetail", new { sortOrder = "AllowanceName" }, null)
                            </th>
                            <th>
                                @Html.ActionLink("Effective Date", "Index_AllRecord", "FixedAllowanceDetail", new { sortOrder = "EffectiveDate" }, null)
                            </th>
                            <th>
                                @Html.ActionLink("End Date", "Index_AllRecord", "FixedAllowanceDetail", new { sortOrder = "EffectiveDate" }, null)
                            </th>
                            <th>
                                @Html.ActionLink("Authority", "Index_AllRecord", "FixedAllowanceDetail", new { sortOrder = "EffectiveDate" }, null)

                            </th>
                            <th>
                                @Html.ActionLink("Authority Date", "Index_AllRecord", "FixedAllowanceDetail", new { sortOrder = "EffectiveDate" }, null)
                            </th>
                            <th></th>
                            <th></th>
                        </tr>

                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <input type="checkbox" class="checkBox" value="@item.FADID" />
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Service_Type)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ServiceNo)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Rank)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AllowanceName)
                                </td>
                                <td>
                                    @Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.EffectiveDate))
                                </td>
                                <td>
                                    @Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.EndDate))
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CampAuthority)
                                </td>
                                <td>
                                    @Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.CampAuthorityDate))
                                </td>

                                <td>                                   
                                    <input type="hidden" id="hndFADID" value="@item.FADID" />
                                    <input type="hidden" id="hndFMSID" value="@item.FMSID" />
                                    @Html.ActionLink("Record Status", "UserFlowHistory", "FixedAllowanceDetail", new { FADID = @item.FADID,RSID = Request.QueryString["RSID"] }, new { @class = "btn btn-warning" })
                                    @*<input id="btnReject" type="button" value="Reject" data-toggle="modal" data-target="#exampleModalLong"  />*@
                            </tr>
                        }
                    </table>           
                    }
                <br />
                @*Paging for Data Table *use only MVC no Javascript*@
                @*{ string LocationId  = Request.QueryString["LocationId"].ToString();}*@

                @{
                    string LocationId_;
                    if (Request.QueryString["LocationId"]!=null)
                    {
                         LocationId_ = Request.QueryString["LocationId"].ToString();
	                }
                    }
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                @Html.PagedListPager(Model, page => Url.Action("Index_AllRecord",
                                                                      new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, RSID = Convert.ToInt32(Request.QueryString["RSID"]), LocationId = Request.QueryString["LocationId"] }))

            </div>
        </div>
    </section>

    <div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    Reject Comments
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <hr style="margin-top: 0px !important; margin-bottom: 0px !important; padding-bottom: 0px !important; padding-top: 0px !important; " />
                </div>

                <div class="modal-body">
                    <div id="partial">
                        @{                            
                            IList<POR.Models.Vw_UserFlowHistory> obj_Vw_UserFlowHistory = new List<POR.Models.Vw_UserFlowHistory>();                            
                            @Html.Partial("_UserFlowHistory", obj_Vw_UserFlowHistory);
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<link href="~/Content/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.js"></script>

<script type="text/javascript">
    $(function () {
        $('#btnReject').click(function () {            
            var FADID = $("#hndFADID").val();
            var FMSID = $("#hndFMSID").val();         
            var route = '@Url.Action("UserFlowHistory", "FixedAllowanceDetail")?FADID=' + FADID + '&FMSID=' + FMSID;
            $('#partial').load(route);
        });
    });
</script>

<script>

    //-----------------------------------All Delete
    $(document).ready(function () {

        $("#checkAll").click(function () {
            $(".checkBox").prop('checked',
                $(this).prop('checked'));
        });

        $("#delete").click(function () {
            var selectedIDs = new Array();
            $('input:checkbox.checkBox').each(function () {
                if ($(this).prop('checked')) {
                    selectedIDs.push($(this).val());
                }
            });
            var options = {};
            options.url = '../FixedAllowanceDetail/Delete';
            options.type = 'POST';
            options.data = JSON.stringify(selectedIDs);
            options.contentType = 'application/json';
            options.dataType = 'json';
            options.success = function (msg) {
                location.reload();
            };
            options.error = function () {
                // alert('Error while deleting the records!');
            };
            $.ajax(options);

        });
    });

    //------------------------------All Forward

    $(document).ready(function () {

        $("#checkAll").click(function () {
            $(".checkBox").prop('checked',
                $(this).prop('checked'));
        });

        $("#forward").click(function () {
            var selectedIDs = new Array();
            $('input:checkbox.checkBox').each(function () {
                if ($(this).prop('checked')) {
                    selectedIDs.push($(this).val());
                }
            });

            var options = {};
            options.url = '../FixedAllowanceDetail/Forward';
            options.type = 'POST';
            options.data = JSON.stringify(selectedIDs);
            options.contentType = 'application/json';
            options.dataType = 'json';
            options.success = function (msg) {
                location.reload();
            };
            options.error = function () {
                // alert('Error while deleting the records!');
            };
            $.ajax(options);

        });
    });

</script>

