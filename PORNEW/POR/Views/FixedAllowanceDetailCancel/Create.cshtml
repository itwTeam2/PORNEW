@model POR.Models._FixedAllowanceCancel

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
      
    <div class="content-wrapper" style="height:900px!important;">        
        <section class="content-header">

            <h1>
                Fixed Allowance Cancel
                <small>View Fixed Allowance</small>
            </h1>

            <ol class="breadcrumb">
                <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
                <li class="active">Dashboard</li>
            </ol> 
           
            <div id="ErrorMessage">
                @if (TempData["ScfMsg"] != null)
                {
                    <div id="Msg" class="col-lg-12  alert alert-success">
                        <button type="button" class="close" data-dismiss="alert">×</button>
                        <strong>Alert!</strong>&nbsp;@TempData["ScfMsg"]
                    </div>
                }
                else if (TempData["ErrMsg"] != null)
                {
                    <div id="Msg" class="col-lg-12 alert alert-danger">
                        <button type="button" class="close" data-dismiss="alert">×</button>
                        <strong>Alert!</strong>&nbsp;@TempData["ErrMsg"]
                    </div>
                }
            </div>           

        </section>  
        <br />    
        <section class="col-lg-12 connectedSortable">
            <div class="nav-tabs-custom">
                @Html.ValidationSummary(true)
               
                 <div class="box-body">
                    <div class="col-lg-6">   
                        <dl>                         
                            <dt>Rank</dt>
                            <dd class="form-group form-control">@Html.DisplayFor(model => model.Rank)</dd>

                            <dt>Name</dt>
                            <dd class="form-group form-control">@Html.DisplayFor(model => model.SurName)</dd>

                            <dt>Allowance</dt>
                            <dd class="form-group form-control">@Html.DisplayFor(model => model.AllowanceName)</dd>

                            <dt>Allowance Category</dt>
                            <dd class="form-group form-control">@Html.DisplayFor(model => model.AllowanceCategory)</dd>
         
                        </dl>
                    </div>             

                    <div class="col-lg-6">                   
                        <dl>
                            <dt>Effective Date</dt>
                            <dd class="form-group form-control">@Convert.ToString(string.Format("{0:dd/MM/yyyy}", Model.EffectiveDate))</dd>

                            <dt>End Date</dt>
                            <dd class="form-group form-control">@Convert.ToString(string.Format("{0:dd/MM/yyyy}", Model.EndDate))</dd>

                            <dt>Camp Authority</dt>
                            <dd class="form-group form-control">@Html.DisplayFor(model => model.CampAuthority)</dd>

                            <dt>Camp Authority Date</dt>
                            <dd class="form-group form-control">@Convert.ToString(string.Format("{0:dd/MM/yyyy}", Model.CampAuthorityDate))</dd>                            
                        </dl>     
                    </div>                                 
                </div>             
            </div>
        </section>

        <section class="col-lg-12 connectedSortable">
            <div class="nav-tabs-custom">
                <div class="box-body">
                    <div class="col-lg-6">
                        <div class="form-group">
                            @Html.Label("Cancel Authority Effective Date", new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.CancelAuthorityEffectiveDate, new { @class = "form-control datepicker", autocomplete = "off", placeholder = "", MaxLength = "60" })
                            @Html.ValidationMessageFor(model => model.CancelAuthorityEffectiveDate, string.Empty, new { @class = "label label-danger" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Cancel Authority", new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.CancelAuthority, new { @class = "form-control", autocomplete = "off", placeholder = "", MaxLength = "60" })
                            @Html.ValidationMessageFor(model => model.CancelAuthority, string.Empty, new { @class = "label label-danger" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Cancel Authority Date", new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.CancelAuthorityDate, new { @class = "form-control datepicker", autocomplete = "off", placeholder = "", MaxLength = "60" })
                            @Html.ValidationMessageFor(model => model.CancelAuthorityDate, string.Empty, new { @class = "label label-danger" })
                        </div>
                        <div class="form-group">
                            @Html.Label("Remark", new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.Remark, new { @class = "form-control", autocomplete = "off", placeholder = "", MaxLength = "60" })
                            @Html.ValidationMessageFor(model => model.Remark, string.Empty, new { @class = "label label-danger" })
                        </div>

                        <div class="form-group">
                            <input type="submit" value="Save & Forward" class="fa fa-arrow-circle-right btn btn-success pull-right" />
                        </div>
                    </div>
                </div>
            </div>
        </section>
      </div>   
    
}
